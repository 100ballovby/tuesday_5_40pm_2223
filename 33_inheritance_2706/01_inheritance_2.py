"""
Виды наследования:
1. Просто наследование подклассом атрибутов родительского класса
2. Полное переопределение в дочернем классе методов родительского класса (переписывание god-object'а)
3 (+). Расширение в дочернем классе методов родителя
"""


class Table:
    def __init__(self, l, w, h):
        self.length = l
        self.width = w
        self.height = h


# унаследуем простым способом (наследование данных родителя)
class DeskTable(Table):  # когда в скобках написано название класса, мы наследуем класс (наследование можно делать только КЛАССА ОТ КЛАССА)
    # если конструктор у наследника отсутствует, он будет брать конструктор родителя
    def square(self):
        return self.width * self.length


class ComputerTable(DeskTable):  # двойное наследование (мы наследуем класс от унаследованного класса)
    def square(self, monitor=0.0):  # ПОЛНОЕ ПЕРЕОПРЕДЕЛЕНИЕ МЕТОДА РОДИТЕЛЬСКОГО КЛАССА
        return self.width * self.length - monitor


t1 = Table(100, 50, 80)
t2 = DeskTable(120, 70, 80)
t3 = ComputerTable(190, 67, 2)  # computer table наследует "от бабушки" конструктор, вызов без параметров вызовет ошибку
print(t2.square())  # посчитаем площадь второго стола
# print(t1.square()) <- обратного наследования не существует
print(t3.square(20))
